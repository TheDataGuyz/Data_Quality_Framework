CREATE TABLE PRODUCT.SECURITY.DQ_RULE (
    DQ_RULE_ID INT IDENTITY(1,1) PRIMARY KEY,
    SUBJECT_AREA VARCHAR(100),
    DATABASE_NAME VARCHAR(100),
    SCHEMA_NAME VARCHAR(100),
    TABLE_NAME VARCHAR(200),
    COLUMN_NAME VARCHAR(200),
    PRIMARY_KEY_COLUMN VARCHAR(200),
    RULE_CATEGORY VARCHAR(200),
    RULE_THRESHOLD DECIMAL(5,2), -- Adjust precision and scale as needed
    RULE_SEVERITY VARCHAR(200),
    RULE_DESCRIPTION NVARCHAR(MAX), -- MAX size for VARCHAR in SQL Server
    RULE_VALIDATION_SCRIPT NVARCHAR(MAX), -- MAX size for VARCHAR in SQL Server
    CREATED_TIMESTAMP DATETIME2(3) DEFAULT GETDATE(),
    UPDATED_TIMESTAMP DATETIME2(3) DEFAULT GETDATE(),
    DQ_ACTIVE_FG VARCHAR(50),
    RULE_TYPE VARCHAR(50)
);

-- Create a trigger to update the UPDATED_TIMESTAMP column on UPDATE
CREATE TRIGGER trg_DQ_RULE_UpdateTimestamp
ON PRODUCT.SECURITY.DQ_RULE
AFTER UPDATE
AS
BEGIN
    SET NOCOUNT ON;

    IF UPDATE(SUBJECT_AREA) OR UPDATE(DATABASE_NAME) OR UPDATE(SCHEMA_NAME) OR UPDATE(TABLE_NAME) OR UPDATE(COLUMN_NAME)
        OR UPDATE(PRIMARY_KEY_COLUMN) OR UPDATE(RULE_CATEGORY) OR UPDATE(RULE_THRESHOLD) OR UPDATE(RULE_SEVERITY)
        OR UPDATE(RULE_DESCRIPTION) OR UPDATE(RULE_VALIDATION_SCRIPT) OR UPDATE(DQ_ACTIVE_FG) OR UPDATE(RULE_TYPE)
    BEGIN
        UPDATE PRODUCT.SECURITY.DQ_RULE
        SET UPDATED_TIMESTAMP = GETDATE()
        FROM PRODUCT.SECURITY.DQ_RULE
        INNER JOIN inserted ON PRODUCT.SECURITY.DQ_RULE.DQ_RULE_ID = inserted.DQ_RULE_ID;
    END;
END;
