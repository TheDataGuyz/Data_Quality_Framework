CREATE OR REPLACE PROCEDURE DATA LABS. DAX BAU. DEV NC DQ CHECK ()
RETURNS VARCHAR (16777216)
LANGUAGE SOL
EXECUTE AS OWNER
AS
'BEGIN
DECLARE
error script STRING;
result script STRING;
DQ_RULE ID INT;
DO_JOB _ID MAX INT;
DO JOB ID NEW INT;
SUBJECT AREA STRING;
DATABASE NAME STRING;
SCHEMA NAME STRING;
TABLE NAME STRING;
COLUMN NAME STRING;
COLUMN SPLIT STRING;
PRIMARY KEY SPLIT STRING;
PRIMARY KEY SPLIT1 STRING;
PRIMARY KEY SPLIT2 STRING;
PRIMARY KEY SIZE INT;
1 INT;
PRIMARY KEY COLUMN STRING;
PRIMARY KEY VALUE STRING;
RULE DESCRIPTION STRING;
RULE THRESHOLD FLOAT;
RULE CATEGORY STRING;
RULE SEVERITY STRING;
RULE VALIDATION SCRIPT STRING;
ROW COUNT INT;
PIT FLAG STRING;
cursor rule CURSOR FOR
SELECT DO RULE ID,
SUBJECT_ AREA,
DATABASE NAME,
SCHEMA_ NAME,
TABLE NAME, COLUMN NAME,
PRIMARY KEY_ COLUMN, RULE DESCRIPTION,RULE_THRESHOLD, RULE CATEGORY, RULE SEVERITY, RULE VALIDATION SCRIPT, PII FLAG
FROM DATA LABS. DAX BAU. DEV NC DO RULE
WHERE 1-1
AND DQ ACTIVE FG = 1
ORDER BY DO RULE ID;
DO_JOB_ID_NEW : (SELECT COALESCE (MAX (DQ_JOB_ID), 0) + 1 FROM DATA LABS. DAX BAU. DEV NC_DO _RESULT) ;

OPEN cursor rule;
FOR record IN cursor rule
DO
DQ RULE ID : = record. DQ RULE ID;
SUBJECT AREA: = record. SUBJECT AREA;
DATABASE NAME := record. DATABASE NAME;
SCHEMA NAME : = record. SCHEMA NAME;
TABLE NAME := record. TABLE NAME;
COLUMN NAME := record.COLUMN NAME;
PRIMARY KEY COLUMN := record. PRIMARY KEY COLUMN;
RULE DESCRIPTION = record. RULE DESCRIPTION;
RULE THRESHOLD := record. RULE THRESHOLD;
RULE CATEGORY :- record. RULE CATEGORY;
RULE SEVERITY :- record. RULE SEVERITY;
RULE VALIDATION SCRIPT : - record.RULE VALIDATION SCRIPT;
PII FLAG : = record.PII FLAG;


COLUMN SPLIT := IFF (COLUMN NAME LIKE 8,81
" 'IFNULL (TO CHAR (SI
REPLACE (COLUMN NAME, IFNULL (TO CHAR ('') 11
"),
COLUMN NAME );
PRIMARY KEY SIZE
ARRAY SIZE (SPLIT (PRIMARY KEY COLUMN

IF (PRIMARY KEY SIZE = 2) THEN
PRIMARY KEY SPLIT2 := " CONCAT (
SPLIT PART (PRIMARY KEY COLUMN
IFNULL (TO CHAR (SPLIT PART (PRIMARY KEY COLUMN,
"',1)), 'NULL
"TITI SPLIT PART PRIMARY KEY COLUMN
2)
IFNULL (TO CHAR (SPLIT PART (PRIMARY KEY COLUMN,
ELSEIF (PRIMARY KEY SIZE - 1) THEN PRIMARY KEY SPLIT?
"CONCAT (UTTITTI PRIMARY KEY COLUMN I'" IFNULL (TO CHAR (PRIMARY KEY COLUMN), ' 'NULL' ELSE PRIMARY KEY SPLIT2 :=
" ' CONCAT (
SPLIT_PART (PRIMARY_KEY_ COLUMN,', "', 1)
IFNULL (TO CHAR (SPLIT PART (PRIMARY KEY COLUMN,
111 | 11.
‚1)) ,''NULL
LOTTIER
TrIPT SPLIT PART (PRIMARY KEY COLUMN
, 2)
TENULL (TO CHAR (SPLIT PART (PRIMARY KEY COLUMN, ' '
' 'NULL'')
TRITE'II SPLIT PART (PRIMARY KEY COLUMN,
2)
IFNULL (TO CHAR (SPLIT PART (PRIMARY KEY COLUMN, '
"'(2)), * 'NULL'
END IF;



error script :=
"INSERT INTO
DATA_LABS. DAX_BAU. DEV_NC_ DQ_ ERROR (
PRIMARY KEY VALUE PAIR, DO_RULE ID, DQ_ JOB ID, SUBJECT AREA, DATABASE NAME, SCHEMA NAME, TABLE NAME, COLUMN NAME, COLUMN VALUE, DO RESULT, RULE SEVERITY, RULE DESCRIPTION, AUDIT TIMESTAMP, PIT_ FLAG)


SELECT DISTINCT
• ' I PRIMARY KEY SPLIT2 I|'• AS PRIMARY KEY VALUE PAIR, I DO RULE ID I TR AS DO_ RULE ID,
I DQ JOB ID NEW I
!!! AS DO_JOB_ID,
I SUBJECT AREA I
!! AS SUBJECT AREA,
|I DATABASE NAME
111 AS DATABASE NAME,
|SCHEMA NAME I
' ' AS SCHEMA NAME,
•I TABLE NAME It
AS TABLE NAME,
TITI |I COLUMN NAME
I AS COLUMN NAME,
CONCAT (I COLUMN SPLIT I
"") AS COLUMN VALUE,
PIT'FAIL'** AS DO RESULT,
1119 | | RULE SEVERITY I1
11 AS RULE SEVERITY,
PERT I RULE DESCRIPTION IT!OT AS RULE DESCRIPTION, CURRENT TIMESTAMP AS AUDIT TIMESTAMP,
FROM ' I| DATABASE NAME || '
.' || SCHEMA NAME | | '
TABLE NAME || '
WHERE 1=1
AND "|I RULE VALIDATION SCRIPT || '';'';


result script
TINSERT INTO
DATA_LABS. DAX BAU. DEV NC DQ RESULT (
DO RULE ID, DO_JOB_ID, SUBJECT_AREA, DATABASE NAME, SCHEMA NAME, TABLE NAME, COLUMN NAME, DQ_RESULT,
I
RULE SEVERITY, RULE DESCRIPTION, RULE THRESHOLD, COUNT OF FAILED, COUNT OF PASSED, PCT OF FAILED, POT OF PASSED, AUDIT TIMESTAMP)

SELECT
POr II
DO RULE ID II VII AS DO RULE ID,
II DO JOB ID NEW II
•OUT! AS DO JOB ID,
II SUBJECT AREA II
AS SUBJECT AREA,
II DATABASE NAME
TO AS DATABASE NAME,
ISCHEMA NAME II
AS SCHEMA_ NAME,
II TABLE NAME LI
AS TABLE NAME,
| COLUMN NAME II
1! AS COLUMN NAME,

CASE
WHEN I I RULE THRESHOLD*100 || ' <=
TO VARIANT (ROUND ( (SUM (CASE WHEN ' '|| RULE VALIDATION_ SCRIPT
IT THEN 1 ELSE O END) / COUNT (1)) * 100, 2)) THEN
WHEN SUM(CASE WHEN TI RULE VALIDATION SCRIPT M' THEN 1
ELSE O END) > 0 THEN " 'BELOW THRESHOLD'!
WHEN SUM (CASE WHEN ' I RULE VALIDATION SCRIPT I' THEN 1-
ELSE O END) = 0 OR SUM(CASE WHEN || RULE VALIDATION SCRIPT
ME THEN 1 ELSE O END) IS NULL THEN I PASS'"!!
END AS DO RESULT,
*****I RULE SEVERITY I'*1 AS RULE SEVERITY,
"'I| RULE DESCRIPTION I''''' AS RULE DESCRIPTION, POTTER IT RULE THRESHOLD 11 STOP! AS RULE THRESHOLD, IFNULL (SUM (CASE WHEN I RULE VALIDATION SCRIPT IT THEN 1
ELSE O END), 0) AS COUNT_OF_ FAILED,
IFNULL (SUM (CASE WHEN TI RULE VALIDATION SCRIPT IT THEN O ELSE 1 END), 0) AS COUNT_OF_ PASSED, IFNULL (TO VARIANT (ROUND ( (SUM (CASE WHEN I" I RULE VALIDATION SCRIPT I' THEN 1 ELSE O END) / COUNT)
100, 2)), 0) AS PCT OF FAILED,
IFNULL (TO VARIANT (ROUND( (SUM (CASE WHEN "' | I
RULE VALIDATION SCRIPT IT THEN O ELSE 1 END) / COUNT (1))
100, 2)), 0) AS PCT_ OF PASSED, CURRENT TIMESTAMP AS AUDIT TIMESTAMP FROM 11 DATABASE NAME IT TABLE NAME I
I | SCHEMA NAME|| ''.'' || TABLE_NAME ||'';'';

EXECUTE IMMEDIATE error script;
EXECUTE IMMEDIATE result script;
END FOR;
CLOSE cursor rule;
RETURN error script;
RETURN AUDIT LOG AND STATISTICS RESULT COMPLETED" END;
END
